<windows:LocalizationWindow x:Class="ShellShockLive.ShellShockLiveWindow"
                            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:windows="clr-namespace:NetExtender.UserInterface.WindowsPresentation.Windows;assembly=NetExtender.UserInterface.WindowsPresentation.Localization"
                            xmlns:Grids="clr-namespace:NetExtender.UserInterface.WindowsPresentation.Types.Grids;assembly=NetExtender.UserInterface.WindowsPresentation"
                            xmlns:ShellShockLive="clr-namespace:ShellShockLive"
                            xmlns:WeaponPanel="clr-namespace:ShellShockLive.View.WeaponPanel"
                            xmlns:System="clr-namespace:System;assembly=System.Runtime"
                            mc:Ignorable="d"
                            DataContext="{Binding RelativeSource={RelativeSource Self}}"
                            Icon="/Files/Icons/Application.ico"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Topmost="True"
                            AllowsTransparency="True"
                            WindowState="Maximized"
                            ResizeMode="NoResize"
                            WindowStyle="None"
                            Title="{Binding Localization.Title.Current}">
    <Window.Resources>
        <ShellShockLive:AngleViewConverter x:Key="AngleViewConverter"></ShellShockLive:AngleViewConverter>
        <ShellShockLive:WindViewConverter x:Key="WindViewConverter"></ShellShockLive:WindViewConverter>
        <ShellShockLive:PowerViewConverter x:Key="PowerViewConverter"></ShellShockLive:PowerViewConverter>
        <ShellShockLive:QuarterViewConverter x:Key="QuarterViewConverter"></ShellShockLive:QuarterViewConverter>
        
        <Style x:Key="ExternalButtonStyle">
            <Setter Property="Control.Opacity" Value="0.2" />
            <Setter Property="Control.BorderThickness" Value="0" />
        </Style>
        
        <Style x:Key="PhysicsInformation" TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="AllowDrop" Value="False" />
            <!--<EventSetter Event="KeyDown" Handler="TextBoxEnterKeyDown" />-->
        </Style>
        
        <Style x:Key="RectangleButtonVisualFocus">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid>
                            <Rectangle Stroke="Black" StrokeDashArray="2 2" StrokeThickness="1" />
                            <Border Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" BorderThickness="1" CornerRadius="2" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CircleButton" TargetType="Button" BasedOn="{StaticResource ExternalButtonStyle}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleButtonVisualFocus}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="#20000000"></Setter>
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" />
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Content" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="3" X="3" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1" />
                <RowDefinition MinHeight="30" MaxHeight="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1" />
                <ColumnDefinition MinWidth="30" MaxWidth="30" />
                <ColumnDefinition Width="0.95*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition MinWidth="30" MaxWidth="30" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition MinWidth="30" MaxWidth="30" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition MinWidth="30" MaxWidth="30" />
                <ColumnDefinition Width="1" />
            </Grid.ColumnDefinitions>

            <Button Grid.Row="1" Grid.Column="1" Click="WeaponsButton" Style="{StaticResource ExternalButtonStyle}">
                <Image Source="Files/Menu/nuclear.png" />
            </Button>

            <Button Grid.Row="1" Grid.Column="4" Click="VisibilityButtonClick" Style="{StaticResource ExternalButtonStyle}">
                <Image Source="Files/Menu/invisible.png" />
            </Button>

            <Button Grid.Row="1" Grid.Column="6" Click="SettingsButton" Style="{StaticResource ExternalButtonStyle}">
                <Image Source="Files/Menu/settings.png" />
            </Button>

            <Button Grid.Row="1" Grid.Column="8" Click="CloseButton" Style="{StaticResource ExternalButtonStyle}">
                <Image Source="Files/Menu/logout.png" />
            </Button>

        </Grid>

        <Grids:MultiGrid Grid.Row="0" Grid.Column="0" Rows="100" Columns="100">
            <Grids:MultiGrid.Style>
                <Style TargetType="Grids:MultiGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Settings.Settings.Interface.Value}" Value="{x:Static ShellShockLive:InterfaceType.Render}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding Settings.Settings.Interface.Value}" Value="{x:Static ShellShockLive:InterfaceType.None}">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grids:MultiGrid.Style>
            
            <WeaponPanel:WeaponPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="80" Grid.ColumnSpan="24"
                                     Weapon="{Binding Model.Weapons.Weapon, Mode=TwoWay}"
                                     ShowPanel="{Binding Model.Weapons.ShowPanel, Mode=TwoWay}" />
            
            <Grid Grid.Row="87" Grid.Column="73" Grid.RowSpan="6" Grid.ColumnSpan="13">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"></RowDefinition>
                    <RowDefinition Height="5"></RowDefinition>
                    <RowDefinition Height="0.5*"></RowDefinition>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ActualHeight, ElementName=VisionButton}"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="0.5*"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="0.5*"></ColumnDefinition>
                    <ColumnDefinition Width="{Binding ActualHeight, ElementName=VisionButton}"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                
                <Button x:Name="VisionButton" Grid.Row="2" Grid.Column="0" Style="{StaticResource CircleButton}" Click="VisionButtonClick">
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Settings.Settings.Scanning.Value}" Value="400">
                                        <Setter Property="Source" Value="Files/Menu/sightoff.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                                
                                <Setter Property="Source" Value="Files/Menu/sight.png" />
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                
                <Button x:Name="ScreenshotButton" Grid.Row="2" Grid.Column="5" Click="ScreenshotButtonClick">
                    <Image Source="Files/Menu/screenshot.png" />
                    
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource CircleButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.Game.Window}" Value="{x:Static System:IntPtr.Zero}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                
                <Label Grid.Row="0" Grid.Column="2" Style="{StaticResource PhysicsInformation}" Background="#007500"
                       Content="{Binding Model.Physics.Angle, Converter={StaticResource AngleViewConverter}, FallbackValue={x:Null}}"
                       GotFocus="AngleTextBoxGotFocus" LostFocus="AngleTextBoxLostFocus"></Label>
                <Label Grid.Row="0" Grid.Column="4" Style="{StaticResource PhysicsInformation}" Background="#000075"
                       Content="{Binding Model.Physics.Wind, Converter={StaticResource WindViewConverter}, FallbackValue={x:Null}}"
                       GotFocus="WindTextBoxGotFocus" LostFocus="WindTextBoxLostFocus"></Label>
                <Label Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3" Style="{StaticResource PhysicsInformation}" Background="#750000"
                       Content="{Binding Model.Physics.Power, Converter={StaticResource PowerViewConverter}, FallbackValue={x:Null}}"
                       GotFocus="PowerTextBoxGotFocus" LostFocus="PowerTextBoxLostFocus"></Label>
            </Grid>
            
            <ListView Grid.Row="67" Grid.Column="86" Grid.RowSpan="26" Grid.ColumnSpan="10"
                      ItemsSource="{Binding Model.Guidance.Guidance}" Background="White"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      SizeChanged="TrajectoryListViewSizeChanged">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <EventSetter Event="MouseDoubleClick" Handler="TrajectorySelected" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">                
                                        <Setter Property="TextElement.Foreground" Value="Black" />                       
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>

                        <GridViewColumn Header="{Binding Localization.Angle.Current}" Width="Auto" DisplayMemberBinding="{Binding Physics.Degree}" />
                        <GridViewColumn Header="{Binding Localization.Quarter.Current}" Width="Auto" DisplayMemberBinding="{Binding Physics.Quarter, Converter={StaticResource QuarterViewConverter}}" />
                        <GridViewColumn Header="{Binding Localization.Power.Current}" Width="Auto" DisplayMemberBinding="{Binding Physics.Power}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grids:MultiGrid>
    </Grid>
</windows:LocalizationWindow>